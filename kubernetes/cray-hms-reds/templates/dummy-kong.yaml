{{- if .Values.gke }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "cray-reds-dummy-kong-apigw"
  labels:
    app.kubernetes.io/name: "cray-reds-dummy-kong-apigw"
    helm.sh/chart: "cray-hms-reds"
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "cray-reds-dummy-kong-apigw"
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "cray-reds-dummy-kong-apigw"
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: "api-gateway"
          image: "{{ .Values.imagesHost }}/cache/nginx:1.13.12-alpine"
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx
              readOnly: true
            - name: nginx-server-certs
              mountPath: /etc/nginx-server-certs
              readOnly: true
      volumes:
        - name: nginx-config
          configMap:
            name: reds-dummy-kong-nginx-conf
        - name: nginx-server-certs
          secret:
            secretName: reds-dummy-kong-nginx-certs

---
apiVersion: v1
kind: Service
metadata:
  name: cray-reds-dummy-kong-apigw
spec:
  ports:
  - name: http
    port: 80
    targetPort: 80
  selector:
    app.kubernetes.io/name: cray-reds-dummy-kong-apigw
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
  name: cray-reds-dummy-kong-apigw
  namespace: services
spec:
  hosts:
  - cray-reds-dummy-kong-apigw
  http:
  - match:
    - uri:
        prefix: /apis/bss
    rewrite:
      uri: " "
    route:
    - destination:
        host: cray-bss
        port:
          number: 80
  - match:
    - uri:
        prefix: /apis/ars
    rewrite:
      uri: " "
    route:
    - destination:
        host: cray-ars
        port:
          number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: cray-reds-dummy-kong-apigw-tls
spec:
  ports:
  - name: https
    port: 443
    targetPort: 443
  selector:
    app.kubernetes.io/name: cray-reds-dummy-kong-apigw
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: reds-dummy-kong-nginx-conf
  namespace: services
data:
  nginx.conf: |+
    events {
    }

    http {
      log_format main '$remote_addr - $remote_user [$time_local]  $status '
      '"$request" $body_bytes_sent "$http_referer" '
      '"$http_user_agent" "$http_x_forwarded_for"';
      access_log /var/log/nginx/access.log main;
      error_log  /var/log/nginx/error.log;

      server {
        listen 443 ssl;

        root /usr/share/nginx/html;
        index index.html;

        server_name cray-reds-dummy-kong-apigw-tls;
        ssl_certificate /etc/nginx-server-certs/tls.crt;
        ssl_certificate_key /etc/nginx-server-certs/tls.key;
        ssl on;
        ssl_session_cache  builtin:1000  shared:SSL:10m;
        ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
        ssl_prefer_server_ciphers on;
        client_max_body_size 0;
        location / {
            proxy_pass http://cray-reds-dummy-kong-apigw;
            proxy_http_version 1.1;
            client_max_body_size 0;
        }

      }
    }
---
apiVersion: v1
kind: Secret
metadata:
  name: reds-dummy-kong-nginx-certs
  namespace: services
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZkRENDQTF5Z0F3SUJBZ0lERUFJU01BMEdDU3FHU0liM0RRRUJDd1VBTUZVeEN6QUpCZ05WQkFZVEFsVlQKTVE4d0RRWURWUVFJREFaRVpXNXBZV3d4RERBS0JnTlZCQW9NQTBScGN6RW5NQ1VHQTFVRUF3d2VZM0poZVMxeQpaV1J6TFdSMWJXMTVMV3R2Ym1jdFlYQnBaM2N0ZEd4ek1CNFhEVEU1TURZd056SXpNek16TUZvWERUSXdNRFl4Ck5qSXpNek16TUZvd2F6RUxNQWtHQTFVRUJoTUNWVk14RHpBTkJnTlZCQWdNQmtSbGJtbGhiREVVTUJJR0ExVUUKQnd3TFUzQnlhVzVuWm1sbGJHUXhEREFLQmdOVkJBb01BMFJwY3pFbk1DVUdBMVVFQXd3ZVkzSmhlUzF5WldSegpMV1IxYlcxNUxXdHZibWN0WVhCcFozY3RkR3h6TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCCkNnS0NBUUVBelhORWxFb0ZaeW8xcUhaWTJNb3VwRFVhaytmN1JvNUZYc3ZKNVFPekZTS29FaElaODVKS1IxdEgKMEhvRnUwYklmd21kZXFOUURzYStyZ0NteVVER3VWWm5lTFk2a2toTUJCYWYzSm5STjZ0TWVZSWN5MTh5TlZrTgpHUEltYlVPSkNKS0RIRTN5SWI3UldldURMeUFOL1dEZlMzNG9NR211bmtSVFhjM0JQSUVIejNSWVh4cjk4U1AvCm1QT2ZGNjZZSmdtUERieVhzeFJzbnFvQk0rSDZBdjl2aFBQelFlSFZ5bmRRbkhQejBxcElNcTNzcDUzbDhEN00KdEtpeDM1bXhtSTBHbDBaSTk2QlVodUsxd2lEUFl5VXQvWkpQTzNXQXhQVU9zQ0ZYL2psVFNOeEs1OTdWQ3NUaApVQSs3RXpxNElKYTFyRzJ3eXZaZnRzdHJnQ0xOSndJREFRQUJvNElCTlRDQ0FURXdDUVlEVlIwVEJBSXdBREFSCkJnbGdoa2dCaHZoQ0FRRUVCQU1DQmtBd013WUpZSVpJQVliNFFnRU5CQ1lXSkU5d1pXNVRVMHdnUjJWdVpYSmgKZEdWa0lGTmxjblpsY2lCRFpYSjBhV1pwWTJGMFpUQWRCZ05WSFE0RUZnUVVuWVlxdjZaenkrMDl5a0Z0bFBuQgpwZW1POTBvd2daY0dBMVVkSXdTQmp6Q0JqSUFVY25yalp3SU1sOHI2blc3Z0xrNy9oL0ZHNDRLaGI2UnRNR3N4CkN6QUpCZ05WQkFZVEFsVlRNUTh3RFFZRFZRUUlEQVpFWlc1cFlXd3hGREFTQmdOVkJBY01DMU53Y21sdVoyWnAKWld4a01Rd3dDZ1lEVlFRS0RBTkVhWE14SnpBbEJnTlZCQU1NSG1OeVlYa3RjbVZrY3kxa2RXMXRlUzFyYjI1bgpMV0Z3YVdkM0xYUnNjNElERUFJU01BNEdBMVVkRHdFQi93UUVBd0lGb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGCkJRY0RBVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBYU5aWklQemdXdGlISXJ1Z25GTkU0VG5YMWJQUEQ2OFcKdDYvc3F0QXBsYkFnSWpWWTNqaGtIWmxSZnhaa2dBaG02QTlicURlMnd4ZmhkLzhpNm50d1ZDRFgwRHNDRWg0OQptVjRrYVVwU1pTSDZUUWZWdDFaeXAxSnM0eGdVdUpZNHBmZ1BKcDdWbzVSQmNWUndLZnNvU3RQUm1GQlltbjhYCmREQUp0d2JpUUtXL2VTeTZOYlRJOTJjZFJqQU9oMDFDc1VFL2F5SnAzL2F6S21ja3VEZy92cEwvMHBKYzBNdW4KcEVmYkFYamRCN0dLYk5CV1V2V0srY1NrditMMkRuY2NPWG9NZUxmeVNzblRvK1JaNTlYWk5obkNPTFJURzBtSgphVjVCbnlyQkRrYTJtdGp1c1ZsdVpuZ2h5TGlGdnkrUVRPeW5TOWxLbTJ6LytTVzAvMXJNdzYvL0N6NFFRV1g1CklDMHExTStTVlk4Sm96NzE3aldmNVFSMHZzVjg0UGkwTTJRSjloN0ptaW1ZeVdGaFc5ZlJvNHh4MDhvVG9ZRFEKSVRjMGVZOUo0d3Fna2pmeVFiWVZ3Q3hnSlZKNmpnOE9FNFJueEpLTUwzSWUyOEtXVWc2SU9iR3FsWmhuVUdEKwozV29ySVRKaXR5LzNibU5mb21jME9lc0xaZml6Um5PS09yeGk5T2lmK2pvWEFLOHdCNHJEV2M1R1dNTlNUUVdlCnZPUDdUa2hkanpTUHZGcll2MW83ZitoV2VBbytZemlMMlVNanhlQmVJeFdZRVJMK2dPaVNHUjdJZVJXRUs3azAKSU9UNTlMc3ZVYzJxUTZ2VGw5TGdXS3hLZjlEaTh2ekRTRDRzY1czbUNOL01DTHcreWpIbE83WVVoc3h6dGFWeQp3L1RHZ0lZcngwdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBelhORWxFb0ZaeW8xcUhaWTJNb3VwRFVhaytmN1JvNUZYc3ZKNVFPekZTS29FaElaCjg1SktSMXRIMEhvRnUwYklmd21kZXFOUURzYStyZ0NteVVER3VWWm5lTFk2a2toTUJCYWYzSm5STjZ0TWVZSWMKeTE4eU5Wa05HUEltYlVPSkNKS0RIRTN5SWI3UldldURMeUFOL1dEZlMzNG9NR211bmtSVFhjM0JQSUVIejNSWQpYeHI5OFNQL21QT2ZGNjZZSmdtUERieVhzeFJzbnFvQk0rSDZBdjl2aFBQelFlSFZ5bmRRbkhQejBxcElNcTNzCnA1M2w4RDdNdEtpeDM1bXhtSTBHbDBaSTk2QlVodUsxd2lEUFl5VXQvWkpQTzNXQXhQVU9zQ0ZYL2psVFNOeEsKNTk3VkNzVGhVQSs3RXpxNElKYTFyRzJ3eXZaZnRzdHJnQ0xOSndJREFRQUJBb0lCQVFDciszc0VHM2FzWnFRbQpVbk9MZnF4T24zbVJLTmVxdDN3UW44MXhYWWh5LytEcng2VmJ4VEZTekhHd2JnVVFRVytqRUp4NFJlL0Zmcyt0Ci96T2ZNdzlucEpIWGRjeFFHaDh3S1BSSGlhZWV6MUdrUWF2eS9zeWI1ZURWNmhjS3prY1BHdjZRR2h1LzdlbDQKT1hOR1pySHZVa0Y2QTdDRzNtRGpjZFRMcUdyRFJzc2dvTXNKS0xqdm4wdTdnd3ovM1VVUDdrSmRkNXg3SUZ1VApxdXlGdStaYXRqQktRVXRsSDEzSnhrK3BCTTl6NlRuZDlxczhFUUZVOGYrTkZ5bjFGRGRNV1ZseTlIT2lxWStTCkpUQ1ltZG81UjNtZ2RVeDljS0NpdXF1SUlrOFRObzVDSDl5eWhhbUMrZGN2clZMZzZlY2pRMFEwaDhzbUNOZXYKdUpGUTBYNDVBb0dCQVBaRGJGZy9yNEZYbUZwNElNSTJ3Nnl3MXFvUkpsOFpiTXNMbnh4c0ZUWHJlMHZ6QVJ5Rgp2VC9UaEpPaHdseDBUSnM0K3ZUVThWczY1NEdyNkJnQzF3MEY0d2NRdWhZOTZFeHFld1JCYnN1citpQkFFV1BLClJMQnY3ZW4vWThVNGk5L2ZVaWpaSENyMk81QVNOSGNScmNhK0wvREtva2FjWG9QR1ZXU0hOM2lOQW9HQkFOV1MKd0V0ZlVUSTFHTWdOVDJDREFHMWdoN1FzWWx3Ui9iakkzYzUrNGJaM3pJSlp5Q1M0dEhhamk5ZnBia1NQb25hVgphcjhIdVhjNkJIZkxGVlk3WWk3blpIVG10M2lVZkRqZHdZTWprbU1MSSsyNWpUSnpkNkU2ZS8zc1libU5Pd1o4CngwRHFFNTdhellVUmQ4azZtaXYyL3BPdVc0Z09oRTc0bzlQQjZkR0RBb0dBS0xYSXFXWU55MklCcTZNRU4xYjYKVGdnRjFLTjFKbTk3anExakpqMnYyL1FMcytoK0hJcjNXQi9OWU9KeTBQbmcyQ0E1VEZRUGVqZG9vZ1ViSHkwSgpBL3dmSmNIY0lXVW1pOHRtZnJPYWIwMEUwbVFFKyt3cUlzaStHZHJBVVpBaGYyYlpuQ3NYL3ZvcHFvMTM0dDhuClRSMlBxMHkwT3R3S3U5b0RyOVN5bE5rQ2dZQTRHMnA3SXBwUkoxUFFVbmJVOHZWc3hweEFBQjBDOVJNRHRYbFgKNDB0bXhVZ3J3bXhyQVQ4Zm44MkFObW5xaHhWMk04Q3NXTm9uY1UxMUx4djI0SGpsdTVKUGg4RVJZMmpUQTZidgp6YXVLYTRYUDBSdy84Y2V1eW8rQ1lOUTNpOXZDMDRzQkNiMkgwUkdHOE5UWVA1WDdFTk5HZHRyQy9wVlJyYzVVCk5qQTRBd0tCZ1FETEo1QWZydHlvVklUTFdFYkxrK3N5Mm03SERsbi84dTcrK05vdHFDMzN1cHk5aFQ2RTJ1bkwKaURCMzRjb3NuTDZCaTdoTGJrN2UxMkE1d3lZc29mbjNrZmdmWnZBNXhkbzkrYUFPeS94dTZ2aHltRDIzTkxuWApQMmNlZGRhTFBnL3ZYMHk2MlZSQlVPY3Y3aDFpWkhCaXM5TVgrSWRIeVR2WVkwSGNjZ25RMUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
{{ end }}